start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")
next})
}
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
}
for (s in 2:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 1) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")}
next)
?tryCatch
for (s in 2:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 1) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")})
}
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
}
for (s in 2:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 2) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")})
}
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
}
}
for (s in 2:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 2) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")})
}
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
}
param
for (s in 1:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 2) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")})
}
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
}
cat("Proporcao de celulas vazias:", sum(is.na(d1))/(nrow(d1)*ncol(d1)))
d1 %>%
mutate(ano = year(date)) %>%
group_by(stationname, ano) %>%
drop_na() %>%
summarise(media_ano_estacao = mean(conc)) %>%
filter(stationname != "Santo Amaro") %>%
ggplot() +
geom_line(aes(x = ano, y = media_ano_estacao, col = stationname), size = 1.3) +
labs(x = "Ano", y = "Media de CO", col = "Nome da estacao") +
theme_bw()
d1
d1 %>%
group_by(stationname, date) %>%
summarise(n = n())
d1 %>%
mutate(ano = year(date))
d1 %>%
mutate(ano = year(date)) %>%
group_by(stationname, ano) %>%
summarise(n = n())
for (s in 1:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 1) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")})
}
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
}
cat("Proporcao de celulas vazias:", sum(is.na(d1))/(nrow(d1)*ncol(d1)))
d1 %>%
mutate(ano = year(date)) %>%
group_by(stationname, ano) %>%
summarise(n = n())
for (s in 1:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 1) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")})
}
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
}
library(Rpollution)
library(readr)
library(readxl)
library(dplyr)
library(lubridate)
library(stringr)
library(tidyr)
library(ggplot2)
param <- read_csv("param_ids.csv")
station <- read_csv("station_ids.csv")
completa <- read_excel("loc_param_stations.xlsx")
head(param, 5)
head(station, 5)
head(completa, 5)
data <- format(data <- seq.Date(as.Date('2010-01-01'), by = 'year', len =  15), "%d/%m/%Y")
data
data <- format(data <- seq.Date(as.Date('2010-01-01'), by = 'day', len =  15), "%d/%m/%Y")
data
?seq.Date
data <- format(data <- seq.Date(as.Date('2010-01-01'), as.Date('2023-12-31'), by = 'day'), "%d/%m/%Y")
data
id_estacoes_2010 <- station %>%
mutate(initial_date = as.Date(dmy(initial_date))) %>%
filter(initial_date <= dmy(01012010)) %>%
select(id)
ids_co <- completa %>%
filter(CO == "SIM") %>%
select(COD)
stat_co <- intersect(id_estacoes_2010$id, ids_co$COD)
for (s in 1:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 1) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")})
}
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
}
cat("Proporcao de celulas vazias:", sum(is.na(d1))/(nrow(d1)*ncol(d1)))
d1 %>%
mutate(ano = year(date)) %>%
group_by(stationname, ano) %>%
summarise(n = n())
d1
data
cat("Proporcao de celulas vazias:", sum(is.na(d1))/(nrow(d1)*ncol(d1)))
d1 %>%
mutate(ano = year(date)) %>%
group_by(stationname, ano) %>%
summarise(n = n())
for (s in 1:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 1) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")})
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
cat("estamos no dia ", data[i])
}
}
for (s in 1:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 1) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR:", conditionMessage(e), "\n")})
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
cat("estamos no dia ", data[i], "\n")
}
}
for (s in 1:length(stat_co)){
print(str_c("estamos na estacao ", stat_co[s]))
for (i in 1:length(data)) {
tryCatch({
if (i == 1 & s == 1) {
d1 <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)
}
else {
dados <- scraper_cetesb(
station = stat_co[s],
parameter = 16,
start = data[i],
end = data[i+1],
login = "malcolm.reis02@gmail.com",
password = "Malmal1450."
)}
}, error=function(e){cat("ERROR \n")})
d1 <- unique(merge(d1, dados, all = T))
if (i == (length(data)-1)) {break}
cat("estamos no dia ", data[i], "\n")
}
}
cat("Proporcao de celulas vazias:", sum(is.na(d1))/(nrow(d1)*ncol(d1)))
d1 %>%
mutate(ano = year(date)) %>%
group_by(stationname, ano) %>%
summarise(n = n())
anova(fit.int)
aov.fit <- aov(fit.sint)
TukeyHSD(aov.fit, conf.level = .95)
##### Biblitotecas
library(readxl) # ler planilha em excel
library(dplyr) # manipulacao do banco
library(ggplot2) # graficos
library(stringr) # manipulacao de strings
library(RColorBrewer) # cores dos graficos
library(ggpubr) # para juntar graficos
library(qqplotr) # para fazer o qqplot e bandas de confianca
##### Limpeza do ambiente
set.seed(123456)
setwd("~/R/projetos/me623_pp/trabalho_final")
rm(list = ls())
options(scipen = 999)
#### Lendo o banco (ja esta em formato longo)
df_limoes <- read_xlsx("experimento_limoes.xlsx") %>%
mutate(rolou = ifelse(rolou == 1, "Sim", "Nao")) %>%
mutate_at(vars(rolou, temperatura), as.factor)
df_limoes %>% str(4)
#### Media dos tratamentos
df_limoes %>%
group_by(rolou, temperatura) %>%
summarise(media = sum(volume_ml))
#### Análise gráfica
box_temp <- df_limoes %>%
mutate(temp_str = str_c("Temperatura: ", temperatura)) %>%
ggplot(aes(x = rolou, y = volume_ml, fill = temperatura)) +
geom_dotplot(binaxis = "y", stackdir = "center", position = "dodge", show.legend = FALSE) +
facet_wrap(~ temp_str, scales = "free") +
stat_summary(aes(group = temperatura), fun = mean, geom = "line", size = 1, color = "black") +
stat_summary(aes(group = rolou), fun = mean, geom = "point", size = 3, color = "black", show.legend = FALSE) +
labs(x = "Rolou", y = "Volume em ml") +
scale_y_continuous(limits = c(47, 54)) +
scale_fill_manual(values = c("green", "MediumSeaGreen", "darkgreen")) +
theme_bw()
box_rolou <- df_limoes %>%
mutate(rolou_str = str_c("Rolou: ", rolou)) %>%
ggplot(aes(x = temperatura, y = volume_ml, fill = rolou)) +
geom_dotplot(binaxis = "y", stackdir = "center", position = "dodge", show.legend = FALSE) +
facet_wrap(~ rolou_str, scales = "free") +
stat_summary(aes(group = rolou), fun = mean, geom = "line", size = 1, color = "black") +
stat_summary(aes(group = rolou), fun = mean, geom = "point", size = 3, color = "black", show.legend = FALSE) +
labs(x = "Temperatura", y = "Volume em ml") +
scale_y_continuous(limits = c(47, 54)) +
scale_fill_manual(values = c("MediumSeaGreen", "darkgreen")) +
theme_bw()
#### Analise de variancia
## Com interacao (nao rejeitou h0 para a interacao)
fit.int <- lm(volume_ml ~ temperatura*rolou, data = df_limoes)
anova(fit.int)
## Sem interacao (vamos usar esse)
fit.sint <- lm(volume_ml ~ temperatura + rolou, data = df_limoes)
anova(fit.sint)
#### Analise grafica de residuos
res <- data.frame(res = fit.sint$residuals,
rolou = df_limoes$rolou,
temperatura = df_limoes$temperatura,
n = 1:length(fit.sint$residuals))
res_diag <- res %>%
ggplot(aes(y = res, x = n)) +
geom_point(col = "darkgreen", size = 2) +
geom_hline(yintercept = 0, col = "MediumSeaGreen") +
labs(x = "Ordem dos dados", y = "Resíduos", title = "Resíduos vs Ordem de Coleta dos Dados") +
theme_bw()
res_qq <- res %>%
ggplot(aes(sample = res)) +
stat_qq(col = "MediumSeaGreen", size = 2) +
stat_qq_line(col = "darkgreen") +
stat_qq_band(col = "darkgreen", alpha = 0.02, fill = "darkgreen") +
labs(x = "Resíduos", y = "Quantis Teóricos", title = "Gráfico de Probabilidade Normal") +
theme_bw()
res.rolou <- res %>%
ggplot(aes(y = res, x = rolou)) +
geom_point(col = "darkgreen", size = 2.5) +
labs(x = "Rolou", y = "Resíduos", title = "Resíduos vs Se rolou o limão") +
theme_bw()
res.temp <- res %>%
ggplot(aes(y = res, x = temperatura)) +
geom_point(col = "darkgreen", size = 2.5) +
labs(x = "Temperatura", y = "Resíduos", title = "Resíduos vs Temperatura") +
theme_bw()
ggarrange(res_diag, res_qq)
ggarrange(res.rolou, res.temp)
#### Comparacoes multiplas
anova(fit.int)
aov.fit <- aov(fit.sint)
TukeyHSD(aov.fit, conf.level = .95)
anova(fit.sint)
aov.fit <- aov(fit.sint)
anova(fit.sint)
aov.fit <- aov(fit.sint)
aov.fit
TukeyHSD(aov.fit, conf.level = .95)
##### Biblitotecas
library(readxl) # ler planilha em excel
library(dplyr) # manipulacao do banco
library(ggplot2) # graficos
library(stringr) # manipulacao de strings
library(RColorBrewer) # cores dos graficos
library(ggpubr) # para juntar graficos
library(qqplotr) # para fazer o qqplot e bandas de confianca
##### Limpeza do ambiente
set.seed(123456)
setwd("~/R/projetos/me623_pp/trabalho_final")
rm(list = ls())
options(scipen = 999)
